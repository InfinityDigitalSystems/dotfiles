# Basic settings
set shell sh
# set hidden!
set icons true
set scrolloff 8
set ifs "\n"

# Draws borders
set drawbox

# Use enter for shell commands
set ifs "\n"

# Interpreter for shell commands
set shell sh

# Set window title
cmd on-cd &{{
  printf "\033]0;LF - $(pwd | sed "s|$HOME|~|") \007" > /dev/tty
}}

# Also run at startup
on-cd

# Make it so you can quit with :q
cmd q quit

# Searchable Bookmarks
cmd bookmark_jump ${{
    res="$(cat $HOME/.config/lf/bookmarks/$(ls $HOME/.config/lf/bookmarks/ | fzf --bind=tab:down,btab:up --reverse --header='Jump to bookmark'))"
    lf -remote "send $id cd \"$res\""
}}

cmd bookmark_create ${{
    # Check if the directory exists
    if [ ! -d "$HOME/.config/lf/bookmarks" ]; then
      # If it doesn't exist, create it
      mkdir -p "$HOME/.config/lf/bookmarks/" 
      echo "Created LF bookmark directory"
    fi
    echo $PWD > ~/.config/lf/bookmarks/$@
}}

# Custom commands
cmd open &{{
	mimetype=$(file --brief --dereference --mime-type $f)
	defapp=$(xdg-mime query default $mimetype)
	case "$defapp" in 
		nvim.desktop)
			lf -remote "send $id \$nvim $f"
			;;
		vim.desktop)
			lf -remote "send $id \$vim $f"
			;;
		*)
			xdg-open $f
	esac
}}

cmd link %{{
	set -- $(cat ~/.local/share/lf/files)
	mode="$1"
	shift
	if [ "$#" -lt 1 ]; then
		lf -remote "send $id echo no files to link"
		exit 0
	fi
	case "$mode" in
		copy)
			ln -sr -t . -- "$@"
			;;
		move)
			ln -t . -- "$@"
	esac
	rm ~/.local/share/lf/files
	lf -remote "send clear"
}}

cmd extract ${{
	set -f
	# Get the base name of the file without extension
	dirname=$(basename "$f" | sed 's/\(.*\)\..*/\1/')
	# Create the directory
	mkdir -p "$dirname"
	case $f in
		*.tar.bz|*.tar.bz2|*.tbz|*.tbz2)
			tar xjvf "$f" -C "$dirname"
			;;
		*.tar.gz|*.tgz)
			tar xzvf "$f" -C "$dirname"
			;;
		*.tar.xz|*.txz)
			tar xJvf "$f" -C "$dirname"
			;;
		*.zip)
			unzip "$f" -d "$dirname"
			;;
		*.rar)
			unrar x "$f" "$dirname"
			;;
		*.7z)
			7z x "$f" -o"$dirname"
	esac
}}

# Compress current file or selected files with tar and gunzip
cmd tar ${{
	set -f
	mkdir $1
	cp -r $fx $1
	tar czf $1.tar.gz $1
	rm -rf $1
}}

# Compress current file or selected files with zip
cmd zip ${{
	set -f
	mkdir $1
	cp -r $fx $1
	zip -r $1.zip $1
	rm -rf $1
}}

cmd paste $cp-p --lf-paste $id

cmd trash %trash-put $fx

cmd open-with-gui &$@ $fx
cmd open-with-cli $$@ $fx

cmd fzf_jump ${{
	res="$(find . | fzf --bind=tab:down,btab:up --reverse --header='Jump to location')"
	if [ -n "$res" ]; then
		if [ -d "$res" ]; then
			cmd="cd"
		else
			cmd="select"
		fi
		res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
		lf -remote "send $id $cmd \"$res\""
	fi
}}



set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner

# Keybinds
# Clear existing keybinds
map y
map d
map p
map c
map u

# Clear and unselect commands
map cc clear
map uu unselect

map <enter> open
map yy copy
map pp paste
map pl link
map dd cut
map dD delete
map dt trash
map dT trash
map D trash
map R reload
map f :fzf_jump

map O push :open-with-gui<space> ## input application
map o push :open-with-cli<space> ## input application

map bc push :bookmark_create<space> ## Create a bookmark
map bb :bookmark_jump ## Jump to bookmark
map bj :bookmark_jump ## Jump to bookmark

map xg $lazygit

map ad :push %mkdir<space>-p<space>
map af :push %touch<space>

# Movement
map gd cd ~/Downloads
map gn cd ~/notes
map g/ cd /
map gh cd ~
map gi cd ~/Nextcloud/
map gc cd ~/.config
map gb cd ~/.config/lf/bookmarks/
map gt cd ~/.local/share/Trash/files
map gr cd ~/repos/
map gm cd /run/media/
map L jump-next
map H jump-prev
